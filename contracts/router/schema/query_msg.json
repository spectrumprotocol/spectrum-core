{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "description": "This structure describes the query messages of the contract.",
  "oneOf": [
    {
      "description": "Returns controls settings that specified in [`Config`] structure.",
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns route",
      "type": "object",
      "required": [
        "route"
      ],
      "properties": {
        "route": {
          "type": "object",
          "required": [
            "denoms"
          ],
          "properties": {
            "denoms": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Denom"
              },
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns routes",
      "type": "object",
      "required": [
        "routes"
      ],
      "properties": {
        "routes": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint8",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns information about a swap simulation in a [`SimulationResponse`] object.",
      "type": "object",
      "required": [
        "simulation"
      ],
      "properties": {
        "simulation": {
          "type": "object",
          "required": [
            "ask",
            "offer_asset"
          ],
          "properties": {
            "ask": {
              "$ref": "#/definitions/Denom"
            },
            "offer_asset": {
              "description": "Offer asset",
              "allOf": [
                {
                  "$ref": "#/definitions/Asset"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "SimulateSwapOperations simulates multi-hop swap operations",
      "type": "object",
      "required": [
        "simulate_swap_operations"
      ],
      "properties": {
        "simulate_swap_operations": {
          "type": "object",
          "required": [
            "offer_amount",
            "operations"
          ],
          "properties": {
            "offer_amount": {
              "description": "The amount of tokens to swap",
              "allOf": [
                {
                  "$ref": "#/definitions/Uint128"
                }
              ]
            },
            "operations": {
              "description": "The swap operations to perform, each swap involving a specific pool",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SwapOperationRequest"
              }
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Asset": {
      "type": "object",
      "required": [
        "amount",
        "info"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "info": {
          "$ref": "#/definitions/AssetInfo"
        }
      }
    },
    "AssetInfo": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "native_token"
          ],
          "properties": {
            "native_token": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "$ref": "#/definitions/Denom"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Denom": {
      "type": "string"
    },
    "SwapOperationRequest": {
      "type": "object",
      "required": [
        "ask",
        "offer",
        "pair"
      ],
      "properties": {
        "ask": {
          "$ref": "#/definitions/Denom"
        },
        "offer": {
          "$ref": "#/definitions/Denom"
        },
        "pair": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
